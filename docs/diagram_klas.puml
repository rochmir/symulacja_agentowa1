@startuml

package "org.example" {
  class Plansza {
    -szerokosc: int
    -wysokosc: int
    -norki: List<Norka>
    -myszy: List<Mysz>
    -sery: List<Ser>
    -koty: List<Kot>
    -liczbaZywychMyszy: int
    -random: Random
    +Plansza(szerokosc: int, wysokosc: int, liczbaNorek: int, liczbaKotow: int, liczbaSerow: int)
    -inicjalizujNorki(liczbaNorek: int): void
    -inicjalizujSery(liczbaSerow: int): void
    -inicjalizujKoty(liczbaKotow: int): void
    -czyPoleZajete(x: int, y: int): boolean
    +getKoty(): List<Kot>
    +getLiczbaZywychMyszy(): int
    +getMyszy(): List<Mysz>
    +getSery(): List<Ser>
    +symulujKrok(): void
    +wyswietlPlansze(): void
  }

  class Symulacja {
    +{static} main(args: String[]): void
    -{static} wczytajLiczbe(scanner: Scanner, komunikat: String, min: int, max: int): int
    -{static} uruchomSymulacje(plansza: Plansza): void
    -{static} wyswietlKomunikatZakonczenia(plansza: Plansza, krok: int): void
  }

  class CSVWriter {
    -writer: FileWriter
    +CSVWriter(filePath: String)
    +zapisz(krok: int, liczbaKotow: int, liczbaMyszy: int): void
    +zamknij(): void
  }

package "org.example.objects" {
  abstract class ObiektPlanszy {
    #x: int
    #y: int
    +ObiektPlanszy(szerokoscPlanszy: int, wysokoscPlanszy: int)
    +getX(): int
    +getY(): int
    +setX(x: int): void
    +setY(y: int): void
    +{abstract} wyswietl(): void
  }

  class Norka {
    -czyMyszWyszla: boolean
    +Norka(szerokoscPlanszy: int, wysokoscPlanszy: int)
    +czyMyszWyszla(): boolean
    +ustawMyszWyszla(wyszla: boolean): void
    +wyswietl(): void
  }

  class Ser {
    +Ser(szerokoscPlanszy: int, wysokoscPlanszy: int)
    +wyswietl(): void
  }
}

package "org.example.objects.zwierzeta" {
  abstract class Zwierze {
    #energia: int
    +Zwierze(szerokoscPlanszy: int, wysokoscPlanszy: int)
    +getEnergia(): int
    +setEnergia(energia: int): void
    +{abstract} poruszajSie(szerokoscPlanszy: int, wysokoscPlanszy: int): void
    +{abstract} czyZywy(): boolean
  }

  class Kot {
    -{static} MAX_ENERGIA: int = 20
    +Kot(szerokoscPlanszy: int, wysokoscPlanszy: int)
    +poruszajSie(szerokoscPlanszy: int, wysokoscPlanszy: int): void
    +zjedzMysz(): void
    +czyZywy(): boolean
    +wyswietl(): void
  }

  class Mysz {
    -{static} MAX_ENERGIA: int = 10
    -aktywna: boolean
    +Mysz(szerokoscPlanszy: int, wysokoscPlanszy: int)
    +Mysz(szerokoscPlanszy: int, wysokoscPlanszy: int, x: int, y: int)
    +czyAktywna(): boolean
    +ustawAktywna(aktywna: boolean): void
    +poruszajSie(szerokoscPlanszy: int, wysokoscPlanszy: int): void
    +czyZywy(): boolean
    +zjedzSer(): void
    +wyswietl(): void
  }
}

ObiektPlanszy <|-- Norka
ObiektPlanszy <|-- Ser
ObiektPlanszy <|-- Zwierze
Zwierze <|-- Kot
Zwierze <|-- Mysz

Plansza "1" *-- "*" Norka
Plansza "1" *-- "*" Mysz
Plansza "1" *-- "*" Ser
Plansza "1" *-- "*" Kot

Symulacja ..> Plansza: creates/uses

@enduml